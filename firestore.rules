rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    match /forms/{formId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        request.auth.uid in (resource.data.sharedWith || [])
      );
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow listing forms
      allow list: if isAuthenticated() && 
        request.query.limit <= 100 &&
        request.query.filters.userId == request.auth.uid;
    }
    
    match /deployments/{deploymentId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.isPublished == true
      );
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      
      // Allow listing deployments
      allow list: if isAuthenticated() && 
        request.query.limit <= 100 &&
        request.query.filters.userId == request.auth.uid;
    }
    
    match /responses/{responseId} {
      allow create: if true;  // Allow public form submissions
      allow read: if isAuthenticated() && 
        exists(/databases/$(database)/documents/deployments/$(resource.data.deploymentId)) &&
        get(/databases/$(database)/documents/deployments/$(resource.data.deploymentId)).data.userId == request.auth.uid;
    }
  }
}